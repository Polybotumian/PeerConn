# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(820, 530)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(820, 530))
        MainWindow.setTabShape(QtWidgets.QTabWidget.Triangular)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setMinimumSize(QtCore.QSize(800, 465))
        self.stackedWidget.setAcceptDrops(True)
        self.stackedWidget.setFrameShape(QtWidgets.QFrame.Box)
        self.stackedWidget.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_main = QtWidgets.QWidget()
        self.page_main.setObjectName("page_main")
        self.gridLayout = QtWidgets.QGridLayout(self.page_main)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_user_hostname = QtWidgets.QLabel(self.page_main)
        self.label_user_hostname.setObjectName("label_user_hostname")
        self.verticalLayout.addWidget(self.label_user_hostname)
        self.lineEdit_user_hostname = QtWidgets.QLineEdit(self.page_main)
        self.lineEdit_user_hostname.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_user_hostname.setReadOnly(False)
        self.lineEdit_user_hostname.setObjectName("lineEdit_user_hostname")
        self.verticalLayout.addWidget(self.lineEdit_user_hostname)
        self.label_user_local_address = QtWidgets.QLabel(self.page_main)
        self.label_user_local_address.setObjectName("label_user_local_address")
        self.verticalLayout.addWidget(self.label_user_local_address)
        self.lineEdit_user_local_address = QtWidgets.QLineEdit(self.page_main)
        self.lineEdit_user_local_address.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_user_local_address.setReadOnly(False)
        self.lineEdit_user_local_address.setObjectName("lineEdit_user_local_address")
        self.verticalLayout.addWidget(self.lineEdit_user_local_address)
        self.listView_sockets = QtWidgets.QListView(self.page_main)
        self.listView_sockets.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.listView_sockets.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)
        self.listView_sockets.setProperty("isWrapping", False)
        self.listView_sockets.setWordWrap(True)
        self.listView_sockets.setObjectName("listView_sockets")
        self.verticalLayout.addWidget(self.listView_sockets)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_listen = QtWidgets.QPushButton(self.page_main)
        self.pushButton_listen.setObjectName("pushButton_listen")
        self.horizontalLayout.addWidget(self.pushButton_listen)
        self.pushButton_connect = QtWidgets.QPushButton(self.page_main)
        self.pushButton_connect.setObjectName("pushButton_connect")
        self.horizontalLayout.addWidget(self.pushButton_connect)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.horizontalLayout_4.addLayout(self.verticalLayout_2)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.listView_chat = QtWidgets.QListView(self.page_main)
        self.listView_chat.setAccessibleDescription("")
        self.listView_chat.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.listView_chat.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.listView_chat.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.listView_chat.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)
        self.listView_chat.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.listView_chat.setTextElideMode(QtCore.Qt.ElideNone)
        self.listView_chat.setProperty("isWrapping", False)
        self.listView_chat.setResizeMode(QtWidgets.QListView.Adjust)
        self.listView_chat.setLayoutMode(QtWidgets.QListView.SinglePass)
        self.listView_chat.setUniformItemSizes(False)
        self.listView_chat.setWordWrap(True)
        self.listView_chat.setObjectName("listView_chat")
        self.verticalLayout_4.addWidget(self.listView_chat)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.lineEdit_message = QtWidgets.QLineEdit(self.page_main)
        self.lineEdit_message.setObjectName("lineEdit_message")
        self.horizontalLayout_2.addWidget(self.lineEdit_message)
        self.pushButton_send_message = QtWidgets.QPushButton(self.page_main)
        self.pushButton_send_message.setObjectName("pushButton_send_message")
        self.horizontalLayout_2.addWidget(self.pushButton_send_message)
        self.verticalLayout_3.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.lineEdit_file_path = QtWidgets.QLineEdit(self.page_main)
        self.lineEdit_file_path.setObjectName("lineEdit_file_path")
        self.horizontalLayout_3.addWidget(self.lineEdit_file_path)
        self.pushButton_file = QtWidgets.QPushButton(self.page_main)
        self.pushButton_file.setObjectName("pushButton_file")
        self.horizontalLayout_3.addWidget(self.pushButton_file)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        self.progressBar_file = QtWidgets.QProgressBar(self.page_main)
        self.progressBar_file.setEnabled(True)
        self.progressBar_file.setProperty("value", 0)
        self.progressBar_file.setObjectName("progressBar_file")
        self.verticalLayout_3.addWidget(self.progressBar_file)
        self.verticalLayout_4.addLayout(self.verticalLayout_3)
        self.horizontalLayout_4.addLayout(self.verticalLayout_4)
        self.gridLayout.addLayout(self.horizontalLayout_4, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_main)
        self.page_help = QtWidgets.QWidget()
        self.page_help.setObjectName("page_help")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.page_help)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.textEdit_guide = QtWidgets.QTextEdit(self.page_help)
        self.textEdit_guide.setReadOnly(True)
        self.textEdit_guide.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.textEdit_guide.setObjectName("textEdit_guide")
        self.gridLayout_3.addWidget(self.textEdit_guide, 0, 0, 1, 1)
        self.pushButton_guide_back = QtWidgets.QPushButton(self.page_help)
        self.pushButton_guide_back.setObjectName("pushButton_guide_back")
        self.gridLayout_3.addWidget(self.pushButton_guide_back, 1, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_help)
        self.page_about = QtWidgets.QWidget()
        self.page_about.setObjectName("page_about")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.page_about)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.textEdit_about = QtWidgets.QTextEdit(self.page_about)
        self.textEdit_about.setReadOnly(True)
        self.textEdit_about.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.textEdit_about.setObjectName("textEdit_about")
        self.gridLayout_4.addWidget(self.textEdit_about, 0, 0, 1, 1)
        self.pushButton_about_back = QtWidgets.QPushButton(self.page_about)
        self.pushButton_about_back.setObjectName("pushButton_about_back")
        self.gridLayout_4.addWidget(self.pushButton_about_back, 1, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_about)
        self.gridLayout_2.addWidget(self.stackedWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 820, 26))
        self.menubar.setObjectName("menubar")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        self.menuOptions = QtWidgets.QMenu(self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionChange_My_Data = QtWidgets.QAction(MainWindow)
        self.actionChange_My_Data.setObjectName("actionChange_My_Data")
        self.actionDownload_Dir = QtWidgets.QAction(MainWindow)
        self.actionDownload_Dir.setObjectName("actionDownload_Dir")
        self.menuAbout.addAction(self.actionHelp)
        self.menuAbout.addSeparator()
        self.menuAbout.addAction(self.actionAbout)
        self.menuOptions.addAction(self.actionChange_My_Data)
        self.menubar.addAction(self.menuOptions.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_user_hostname.setText(_translate("MainWindow", "Host Name"))
        self.lineEdit_user_hostname.setToolTip(_translate("MainWindow", "Your name. Default is your PC name."))
        self.label_user_local_address.setText(_translate("MainWindow", "Local Address"))
        self.lineEdit_user_local_address.setToolTip(_translate("MainWindow", "Your IPv4 address."))
        self.listView_sockets.setToolTip(_translate("MainWindow", "List of peersockets."))
        self.pushButton_listen.setToolTip(_translate("MainWindow", "To create a server peersocket."))
        self.pushButton_listen.setText(_translate("MainWindow", "Listen"))
        self.pushButton_connect.setToolTip(_translate("MainWindow", "To create a client peersocket."))
        self.pushButton_connect.setText(_translate("MainWindow", "Connect"))
        self.listView_chat.setToolTip(_translate("MainWindow", "Chat panel of selected peersocket."))
        self.lineEdit_message.setToolTip(_translate("MainWindow", "Message box. Enter is the hot key for sending message."))
        self.lineEdit_message.setPlaceholderText(_translate("MainWindow", "Type your message here!"))
        self.pushButton_send_message.setToolTip(_translate("MainWindow", "Send your message with this button."))
        self.pushButton_send_message.setText(_translate("MainWindow", "Send Message"))
        self.lineEdit_file_path.setToolTip(_translate("MainWindow", "Message box. Enter key is the hot key for sending message."))
        self.lineEdit_file_path.setPlaceholderText(_translate("MainWindow", "File path"))
        self.pushButton_file.setToolTip(_translate("MainWindow", "Opens file dialog."))
        self.pushButton_file.setText(_translate("MainWindow", "Pick File"))
        self.textEdit_guide.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Host Name and Local Address:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">PeerConn automatically assigns your computer name as &quot;Host Name&quot; and finds your IPv4 to assign it as &quot;Local Address&quot;. The most important thing here is your Local Address, which you can use to set up listener peer sockets for incoming connections, or to connect to another computer using its IPv4.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Listen and Connect buttons:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">These buttons allow you to create 2 different types of peersockets, these are server and client peersockets. When you create a peersocket it will appear in a list on the left hand side of the window.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Peersockets:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">The left pane of the window is a list of peersockets. You can select a peersocket by clicking on it. When a socket is selected, you can only interact with that peersocket. You can also change the name of the peersocket from the context menu that opens when you right click on it.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Server Peersocket:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">This type of peersocket is for incoming connections. A server peersocket has a down arrow icon to indicate that it is a server.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Client Peersocket:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">This type of peersocket is for connecting to a server peersocket. A client peersocket has an up arrow icon to indicate that it is a client.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Peersocket icon colours:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">       </span><span style=\" font-size:10pt; color:#ffe100;\">Yellow</span><span style=\" font-size:10pt;\">: Indicates that it is active and waiting for a connection.</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">       </span><span style=\" font-size:10pt; color:#2fff00;\">Green</span><span style=\" font-size:10pt;\">: Indicates that it is active and connected.</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">       </span><span style=\" font-size:10pt; color:#aa0000;\">Red</span><span style=\" font-size:10pt;\">: Indicates inactive and connection lost.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">To send multiple files</span><span style=\" font-size:10pt;\">, you should zip your files and then send the zip file.</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">To connect over different networks</span><span style=\" font-size:10pt;\"> you should use 3rd party tools. (e.g. Localtonet)</span></p></body></html>"))
        self.pushButton_guide_back.setText(_translate("MainWindow", "Back"))
        self.textEdit_about.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">About PeerConn</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">PeerConn is a peer-to-peer socket chat desktop application. It allows you to create multiple sockets to communicate with other sockets. It aims to manage communication and data transfer between computers with a user-friendly graphical interface.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">It is developed using Python and many libraries used in development such as PyQt5, asyncio, psutil, logging. </span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Due to the handling of multiple sockets and data transfer processes, PeerConn has to work in an async loop. For this reason there are 2 threads that this program has to use. The main thread is for the PyQt5 interface and the other is for PeerConn itself. </span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">For the sake of integration of PeerConn with PyQt5 and the performance of the application and the nature of async programming, PeerConn has a main method that remains a loop that handles runtime transactions and waits for runtime commands via event. This way all tasks are created in the same loop and are able to execute certain methods in a sync code and it also keeps async sockets alive.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">It has a basic logging system that logs actions and errors in the program to a file with the extension &quot;log&quot;.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Developer Request</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Please report any bugs you have found when using PeerConn. I would also be grateful if you could let me know what you think is missing from PeerConn.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"github.com/Polybotumian/PeerConn\"><span style=\" font-size:10pt; text-decoration: underline; color:#0000ff;\">PeerConn GitHub Page</span></a></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"github.com/Polybotumian\"><span style=\" font-size:10pt; text-decoration: underline; color:#0000ff;\">My GitHub</span></a></p></body></html>"))
        self.pushButton_about_back.setText(_translate("MainWindow", "Back"))
        self.menuAbout.setTitle(_translate("MainWindow", "Info"))
        self.menuOptions.setTitle(_translate("MainWindow", "Options"))
        self.actionPreferences.setText(_translate("MainWindow", "Theme"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionChange_My_Data.setText(_translate("MainWindow", "Configurations"))
        self.actionDownload_Dir.setText(_translate("MainWindow", "Download Dir"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
